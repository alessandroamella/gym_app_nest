generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum UserRole {
  USER
  DEV
  OWNER
}

enum Gender {
  M
  F
}

model User {
  id            Int       @id @default(autoincrement())
  fiscalCode    String    @unique
  gender        Gender
  birthdate     DateTime
  birthplace    String
  birthProvince String
  username      String
  role          UserRole  @default(USER)
  profilePicId  String?   @unique
  profilePic    Media?    @relation(fields: [profilePicId], references: [key])
  workouts      Workout[] @relation("UserWorkout")
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  deletedAt     DateTime?
}

enum WorkoutType {
  GYM
  CARDIO
  YOGA
  SPORT
  OTHER
}

enum MediaType {
  IMAGE
  VIDEO
}

enum MediaCategory {
  PROFILE_PIC
  WORKOUT
}

model Media {
  key            String        @id
  url            String        @unique
  category       MediaCategory
  type           MediaType
  workoutId      Int? // if used in a workout
  mime           String
  workout        Workout?      @relation(fields: [workoutId], references: [id])
  userProfilePic User?
  createdAt      DateTime      @default(now())
  updatedAt      DateTime      @updatedAt
  deletedAt      DateTime?
}

model Workout {
  id        Int         @id @default(autoincrement())
  startTime DateTime
  endTime   DateTime
  type      WorkoutType
  notes     String?
  media     Media[]
  users     User[]      @relation("UserWorkout")
  createdAt DateTime    @default(now())
  updatedAt DateTime    @updatedAt
  deletedAt DateTime?
}
